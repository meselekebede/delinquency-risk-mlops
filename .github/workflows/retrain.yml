# .github/workflows/retrain.yml
name: 🔄 Weekly Model Retraining

on:
  schedule:
    - cron: '0 0 * * 0'   # Every Sunday at 00:00 UTC (~5:00 AM Ethiopia time)
  workflow_dispatch:      # Allows manual trigger via GitHub UI

jobs:
  retrain-model:
    runs-on: ubuntu-latest
    name: "🔁 Retrain Delinquency Risk Model"

    steps:
      # 1. Checkout code
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Python
      - name: 🐍 Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 3. Install dependencies
      - name: 📦 Install required packages
        run: |
          pip install --upgrade pip
          pip install pandas numpy scikit-learn xgboost mlflow joblib fastapi uvicorn openpyxl

      # 4. Make sure directories exist
      - name: 📁 Create models directory
        run: mkdir -p models

      # 5. Run retraining script
      - name: 🚀 Run retraining script
        run: python scripts/retrain.py

      # 6. Save updated models
      - name: 📤 Upload updated models
        uses: actions/upload-artifact@v3
        with:
          name: trained-models
          path: models/

      # Optional: Commit updated data/model info back
      - name: 📝 Commit updated dataset (optional)
        id: commit
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add data/raw/synthetic_loan_data.csv models/*.pkl
          git status
          if git diff-index --quiet HEAD --; then
            echo "No changes to commit"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            git commit -m "🤖 Auto-retrain: Updated training data and models [$(date)]"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      # Push only if there were changes
      - name: 🔼 Push changes to GitHub
        if: steps.commit.outputs.has_changes == 'true'
        run: git push origin main